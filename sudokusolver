#include<iostream>
#include<cmath>
using namespace std;

//we will be making a program for solving any type if sudoku using backtracking
//sudoku_solver
//isvalid()

#define n 9

void display(int board[n][n]){
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
        cout<<""<<board[i][j]<<" ";
        }
        cout<<"\n";     
    }
    
}

bool isvalid(int board[n][n],int x,int y,int val){
    for(int j=0;j<n;j++){//row fixed column change 
        if(board[x][j]==val){
            return false;
        }
    }
    for(int i=0;i<n;i++){//column fixes row different
        if(board[i][y]==val){
            return false;
        }
    }
    //now we have to check for sub-matrix
    //for edge divide row,column by 3 then multiply by 3 //5,7 (5/3,7/3)=1,2 *3=3,6,
    int z=sqrt(n);
    int smi=x/z*z;
    int smj=y/z*z;
    for(int i=0;i<z;i++){
        for(int j=0;j<z;j++){
            if(board[smi+1][smj+j]==val){
                return false;
            }
        }
    }
    return true;
}

void sudoku_solver(int board[n][n],int i,int j){
   
    int ni=0;
    int nj=0;
    //traversal
    if(j==n-1){//if j is at extreme end
        ni=i+1;
        nj=0;
    }else{
        ni=i;
        nj=j+1;
    }
    if(board[i][j]!=0 ){//we don't have to do anything but again call the function
        sudoku_solver(board,ni,nj);
    }else{
        for(int p=1;p<=n;p++){//for possible options
            if(isvalid(board,i,j,p)==true){
                board[i][j]=p;
                if(ni==n){
                    display(board);
                    break;
                }
                sudoku_solver(board,ni,nj);
                board[i][j]=0;//if we backtrack we have to change the value to 0 again

            }
        }
    }
}



int main()
{
    char s;
    cout<<"\t\n\n               ****************** WELCOME TO SUDOKU SOLVER ******************\n\n";
    cout<<"\t\t\t\t\t\t\t\t\t\t\t- MADE BY RAMAN AHLAWAT (2K20/SE/105)\n\n";
    cout<<"\t\t\t\t\t\t\t\t\t\t\t- MADE BY SHIV RAJ (2K20/SE/127)\n\n";
    cout<<"\tDO YOU WANT TO ENTER THE SUDOKU(Y) OR RUN THE PROGRAM ON SAMPLE SUDOKU(N) : ";
    cin>>s;
    int a[9][9];
    if(s=='y'||s=='Y'){
    for(int i=0;i<9;i++){
        for(int j=0;j<9;j++){
            cout<<"ENTER THE "<<i<<","<<j<<"TH ELEMENT : ";
            cin>>a[i][j];
        }
    }
    cout<<endl;
    cout<<"\t\n\nTHE SUDOKU YOU ENTERED IS \n";
    display(a);
    cout<<endl;
    cout<<"THE SOLUTION OF THE ENTERED SUDOKU IS \n";
    sudoku_solver(a,0,0);

    }
    else if(s=='n'||s=='N')
    {
    int sudoku[9][9]={ { 0, 0, 0, 0, 6, 0, 0, 1, 0 },
                       { 0, 0, 7, 0, 0, 0, 6, 0, 0 },
                       { 0, 0, 3, 0, 0, 8, 0, 9, 4 },
                       { 0, 8, 0, 0, 0, 6, 0, 7, 5 },
                       { 0, 2, 0, 0, 0, 0, 0, 0, 0 },
                       { 0, 5, 0, 7, 0, 0, 0, 4, 0 },
                       { 0, 0, 0, 0, 0, 1, 4, 6, 0 },
                       { 0, 0, 5, 3, 9, 0, 0, 0, 0 },
                       { 2, 0, 0, 0, 0, 7, 0, 0, 0 }};
                       cout<<"THE SAMPLE SUDOKU IS \n";
                    display(sudoku);
                    cout<<"\t\n-------------------------------\n\n";
                    cout<<"THE SOLUTION TO THE SUDOKU IS \n";
        sudoku_solver(sudoku,0,0);
    }
    else{
        cout<<"YOU ENTERED INCORRECT CHOICE\n";
    }
    return 0;
}
